@using Model.BU;
@{
    List<BUMast> BUList = ViewBag.BUList;
    DateTime thisDate = DateTime.Now.AddDays(2);
}
<div class="row">
    <div class="col-xs-12">
        <div class="box">
            <div class="box-body">
                <div class="col-sm-12 form-horizontal">
                    <div class="form-group">
                        <div class="col-sm-2">
                            <select class="form-control" id="BUGuid">
                                @foreach (BUMast BU in BUList)
                                {
                                    <option value="@BU.BUGuid">@Html.Raw(BU.BUCode + " / " + BU.BUName)</option>
                                }
                            </select>
                        </div>
                        <div class="col-sm-3">
                            <div class="input-group">
                                <input type="text" id="searchKey" placeholder="@ViewBag.LabelSearchHint" class="form-control">
                                <span class="input-group-btn">
                                    <button type="button" class="btn btn-primary" id="searchBtn" onclick="Item.search('@ViewBag.Type')">@ViewBag.LabelSearch</button>
                                </span>
                            </div>
                        </div>
                        <div class="col-sm-1">
                            <button class="btn btn-success ladda-button" data-style="zoom-out" onclick="Item.exports(this)">
                                <i class="fa fa-download"></i> @ViewBag.LabelExport
                            </button>
                        </div>
                    </div>
                </div>
                <table id="item" class="table table-striped table-bordered dataTable" cellspacing="0">
                    <thead>
                        <tr>
                            <th></th>
                            <th>@ViewBag.LabelSort</th>
                            <th>@ViewBag.LabelCode</th>
                            <th>@ViewBag.LabelDescription</th>
                            <th>@ViewBag.LabelDescription_EN</th>
                            <th>@ViewBag.LabelType</th>
                            <th>@ViewBag.LabelPrice</th>
                            <th>@ViewBag.LabelPromotionPrice</th>
                            <th>@ViewBag.LabelCurrentMaterialCost</th>
                            <th>@ViewBag.LabelLastMaterialCost</th>
                            <th>@ViewBag.LabelOtherCost</th>
                            <th>@ViewBag.LabelCurrentGMRate</th>
                            <th>@ViewBag.LabelLastGMRate</th>
                            <th><input type="checkbox" id="parentck" class="minimal"></th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
<script>
    $(function () {
        $('#parentck').iCheck({
            checkboxClass: 'icheckbox_minimal-blue',
            radioClass: 'iradio_minimal-blue',
            checked:true
        }).on('ifChecked', function () {
            $('#item tbody input[type="checkbox"].minimal').iCheck('check');
        }).on('ifUnchecked', function () {
            $('#item tbody input[type="checkbox"].minimal').iCheck('uncheck');
        });
        $('#searchKey').on('keydown', function (event) {
            if (event.keyCode === 13) $('#searchBtn').click();
        }).focus();
    });
    var Item = {
        tbl: null,
        clear: function () {
            if (Item.tbl != undefined && Item.tbl != null) {
                Item.tbl.clear();
                Item.tbl.draw();
            }
        },
        search: function (type) {
            if (Item.tbl === null) {
                Item.tbl = $('#item').DataTable({
                    order: [[1, 'asc']],
                    searching: false,
                    lengthMenu: [[10, 15, 30, -1], [10, 15, 30, "ALL"]],
                    dom: 'rt<"bottom"ilp<"clear">>',
                    processing: true,
                    stateSave: false,
                    deferRender: true,
                    language: {
                        "processing": "@ViewBag.LabelLoading",
                        "zeroRecords": "@ViewBag.LabelNoData",
                        "lengthMenu": "@ViewBag.LabelLengthMenu",
                        "info": "@ViewBag.LabelTableInfo",
                        "infoEmpty": "@ViewBag.LabelTableInfoEmpty",
                        "paginate": {
                            "first": "@ViewBag.LabelFirstPage",
                            "previous": "@ViewBag.LabelPreviousPage",
                            "next": "@ViewBag.LabelNextPage",
                            "last": "@ViewBag.LabelLastPage"
                        }
                    },
                    ajax: {
                        "url": '@Url.Content("~/api/SEMIApi/GetTableFGCostPriceDatas/" + @ViewBag.Language)',
                        "type": "POST",
                        "data": function (d) {
                            d.BUGuid = $('#BUGuid').children('option:selected').val(),
                            d.KeyWords = $('#searchKey').val()
                        }
                    },
                    columns: [
                        { class: 'details-control', orderable: false, data: null, defaultContent: '' },
                        { data: 'ItemSort' },
                        { data: 'ItemCode' },
                        { data: 'ItemName_CN' },
                        { data: 'ItemName_EN' },
                        { data: 'ItemType' },
                        { data: 'ItemPrice' },
                        { data: 'ItemPromotionPrice' },
                        { data: 'ItemPreviousActCost' },
                        {
                            data: 'ItemActCost',
                            render: function (data, type, row, meta) {
                                if (data > row.ItemPreviousActCost)
                                    return '<span class="label label-danger" style="font-size:12px">' + data + '</span>';
                                else if (data < row.ItemPreviousActCost)
                                    return '<span class="label label-success" style="font-size:12px">' + data + '</span>';
                                else return data;
                            }
                        },
                        { data: 'OtherCost' },
                        {
                            data: 'ItemPreviousActGMRate',
                            render: function (data, type, row, meta) {
                                return data + '%';
                            }
                        },
                        {
                            data: 'ItemActGMRate',
                            render: function (data, type, row, meta) {
                                return data + '%';
                            }
                        },
                        {
                            data: null,
                            defaultContent: '<input type="checkbox" class="minimal">',
                            orderable: false
                        }
                    ]
                }).on('draw.dt', function () {
                    $('#item tbody input[type="checkbox"].minimal').iCheck({
                        checkboxClass: 'icheckbox_minimal-blue',
                        radioClass: 'iradio_minimal-blue'
                    }).iCheck('uncheck');
                    $('#parentck').iCheck('uncheck');
                });
                $('#item tbody').on('click', 'td.details-control', function () {
                    var tr = $(this).closest('tr');
                    var row = Item.tbl.row(tr);
                    if (row.child.isShown()) {
                        row.child.hide();
                        tr.removeClass('shown');
                    }
                    else {
                        if (action) return;
                        else action = true;
                        actionRequest.post({
                            url: '@Url.Content("~/SEMI/BOMCostView/" + ViewBag.Language)',
                            postData: {
                                ItemGuid: row.data().ItemGuid,
                                BUGuid: $('#BUGuid').children('option:selected').val()
                            },
                            dataType: 'html',
                            success: function (response) {
                                row.child(response).show();
                                tr.addClass('shown');
                            },
                            complete: function (xhr) {
                                action = false;
                            }
                        });
                    }
                });
            }
            else Item.tbl.ajax.reload();
        },
        exports: function (o) {
            if (Item.tbl == null) {
                $('#alertModal .modal-body').html('<p><strong>@ViewBag.LabelNoData</strong></p>');
                $('#alertModal').modal('show');
            }
            else {
                var tblData = {
                    data : []
                };
                $('#item tbody input[type="checkbox"].minimal').each(function () {
                    if ($('#parentck').prop('checked') || $(this).prop('checked')) {
                        var data = Item.tbl.row($(this).parents('tr')).data();
                        tblData.data.push(data);
                    }
                });
                if (tblData.data.length <= 0) {
                    $('#alertModal .modal-body').html('<p><strong>@ViewBag.LabelNoChosedRecord</strong></p>');
                    $('#alertModal').modal('show');
                }
                else {
                    if (action) return;
                    else action = true;
                    var l = Ladda.create(o);
                    l.start();
                    actionRequest.post({
                        url: '@Url.Content("~/api/SEMIApi/ExportFGCostPriceDatas/" + ViewBag.Language)',
                        postData: tblData,
                        success: function (response) {
                            if (response != undefined && response != null && response != '') {
                                var url = '@Url.Content("~/SEMI/DownloadExcelData/" + ViewBag.Language)' + '/?link=' + response;
                                $([url]).multiDownload({ source: "server" });
                            }
                        },
                        complete: function (xhr) {
                            action = false;
                            l.stop();
                        }
                    });
                }
            }
        }
    };
</script>